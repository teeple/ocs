<?php

module_load_include( 'inc', 'ocs_admin', 'ocs_campaign_action');
module_load_include( 'inc', 'ocs_admin', 'ocs_campaign_event');
module_load_include( 'inc', 'ocs_admin', 'ocs_campaign_cond');

/*
** campaign list
*/
function ocs_admin_campaign_overview() 
{
    $result = array(
        array( 'title' => 'First call campaign',
            'description' => 'Give bonus when a user makes a first call',
            'campaign_name' => 'first_call_1',
            'campaign_id' => '1',
            ),
        array( 'title' => 'Recharge bonus campaign',
            'description' => 'Give 100 SMS for 3 consequent recharges',
            'campaign_name' => 'rechrage_1',
            'campaign_id' => '2',
            ),
    );

    $header = array( t('Campaign'), array('data' => t('Operations'), 'colspan' => '3'));
    $rows = array();
    foreach( $result as $item) {
        $row = array( theme( 'ocs_admin_group_overview', 
            array( 'title' => $item['title'],
                'name' => $item['campaign_name'],
                'description' => $item['description'])));
        $row[] = array( 'data' => l(t('edit'), 'ocs_admin/campaign/'. $item['campaign_id'] . '/edit'), 
            'class' => 'operation-list');
        $row[] = array( 'data' => l(t('rules'), 'ocs_admin/campaign/'. $item['campaign_id'] . '/rule'), 
            'class' => 'operation-list');
        $row[] = array( 'data' => l(t('disable'), 'ocs_admin/campaign/'. $item['campaign_id'] . '/disable'), 
            'class' => 'operation-list');
        $rows[] = $row;
    }

    return array(
        'active' => array(
            '#markup' => '<h3>Active Campaigns</h3>'.
                theme( 'table', array( 'header' => $header, 'rows' => $rows)),
            ),
         'inactive' => array(
            '#markup' => '<br><h3>Inactive Campaigns</h3>'.
                theme( 'table', array( 'header' => $header, 'rows' => $rows)),
            ),
    );
}

function ocs_admin_campaign_rule_page( $campaign_id)
{ 
    $form = drupal_get_form( 'ocs_admin_campaign_rule_form', $campaign_id);
    $page = array(
         'rule' => array(
            '#markup' => drupal_render( $form),
            ),
    );

    return $page;
}

/*
** campaign rules form
*/
function ocs_admin_campaign_rule_form( $form, &$form_state, $campaign_id = NULL)
{
	$form['#attached']['css'] = array(drupal_get_path('module', 'ocs_admin') . '/ocs_admin.css');

	$form['#description'] = '<p>Edit Campaign Rules</p>';

  //****************************
  // get all events
  //****************************

	$event = ocs_admin_campaign_events_load_all( $campaign_id);

	foreach( $event as $key => $item) {
		$records = array();
		$node = node_load( $item['event_id']);
		$client = taxonomy_term_load( $node->field_ocs_client_id['und'][0]['tid']);

		$info = array(
			'title' => $node->title,
			'name' => $client->name,
			'description' => t( '<em>%event</em> event generated by the system <em>%client</em>',
				array( '%event' => $node->title, '%client' => $client->name)),
			'#attributes' => array( 'class' => array('menu-enabled')),
			'weight' => array(
				'#type' => 'weight',
				'#delta' => 50,
	//        '#default_value' => $item['weight'],
				'#default_value' => 50,
				'#title_display' => 'invisible',
				'#title' => t('Weight for @title', array('@title' => $node->title)),
		  ),
  		);

		$event[ $key] = array_merge( $event[$key], $info);

		// Build a list of operations
		$operations = array();
		$t_arg = array( '@campaign' => $item['campaign_id'], '@event' => $item['event_id']);
		$q_arg = array( 'query' => array( 'event_name' => $node->title));

		drupal_add_library( 'system', 'drupal.ajax');
		$operations['rule'] = array( 
			'#type' => 'link',
			'#title' => t('Add Rule'),
			'#href' => t( 'ocs_admin/campaign/@campaign/event/@event/rule/nojs/add', $t_arg),
			'#options' => array( 'html' => TRUE, 
				'attributes' => array( 'class' => array( 'use-ajax'))),
	  	);

		$operations['delete'] = array( 
		  '#type' => 'link',
		  '#title' => t('Delete'),
		  '#href' => t( 'ocs_admin/campaign/@campaign/event/@event/delete', $t_arg),
		  '#options' => $q_arg,
		  );

		$event[ $key]['operations'] = $operations;

		$rule = ocs_admin_campaign_event_rule_load( $campaign_id, $key);
		dpm( $rule, 'rules');
		$event[ $key]['#rule'] = $rule;
	}
	$form['event']['#records'] = $event;
	$form['event']['#caption'] = '<h3>Events</h3>';
	$form['event']['#empty_text'] = t('There are no events yet.');
	$form['event']['#no_rule'] = t('There are no rules yet. ');

	// add footer
	$form['#footer'] = t('<ul class="action-links">'.
	'<li><a href="@rule">Add Event</a></li>'. '</ul>',
		array( '@rule' => url( 'ocs_admin/campaign/'. $campaign_id . '/rule/event'))
	);

  //****************************
  // get all conditions
  //****************************


  /*
  $tree = ocs_admin_build_tree( $cond, array(
	'title' => 'cond_name',
	'plid' => 'parent_id',
	'mlid' => 'cond_id',
  ));

  $form = array_merge( $form, _ocs_campaign_tree_form($tree));
  $form['#caption'] = 'Conditions';

  if ( ! element_children($form)) {
    $form['#empty_text'] = t('There are no campaign rules yet. <a href="@link">Add Conditions</a>.', 
        array('@link' => url('ocs_admin/campaign/'. $campaign_id .'/cond/add')));
  }
  */

  // add footer
  /*
  $form['#add_cond'] = t('<ul class="action-links">'.
    '<li><a href="@rule">Add Condition</a></li>'.'</ul>',
        array( '@rule' => url( 'ocs_admin/campaign/'. $campaign_id . '/cond/add'),)
    );

  $form['#add_action'] = t('<ul class="action-links">'.
    '<li><a href="@rule">Add Action</a></li>'.'</ul>',
        array( '@rule' => url( 'ocs_admin/campaign/'. $campaign_id . '/action/add'),)
    );
	*/

  //****************************
  // submit buttons for condition tree
  //****************************

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Conditions'),
    );

  //****************************
  // get all actions
  //****************************

  $actions = ocs_admin_campaign_actions_load_all( $campaign_id);
  foreach( $actions as $key => $item) {
    $records = array();
    $node = node_load( $item['action_id']);
    $client = taxonomy_term_load( $node->field_ocs_client_id['und'][0]['tid']);

    $info = array(
        'title' => $node->title,
        'name' => $client->name,
        'description' => t( '<em>%action</em> action provided by the system <em>%client</em>',
            array( '%action' => $node->title, '%client' => $client->name)),
        '#attributes' => array( 'class' => array('menu-enabled')),
        'weight' => array(
            '#type' => 'weight',
            '#delta' => 50,
//        '#default_value' => $item['weight'],
            '#default_value' => 50,
            '#title_display' => 'invisible',
            '#title' => t('Weight for @title', array('@title' => $node->title)),
      ),
  	);

    $actions[ $key] = array_merge( $actions[$key], $info);

    // Build a list of operations
    $operations = array();
    $operations['edit'] = array( 
      '#type' => 'link',
      '#title' => t('edit'),
      '#href' => t( 'ocs_admin/campaign/@campaign/action/@action/edit',
		  array( '@campaign' => $item['campaign_id'],
			  '@action' => $item['action_id'])),
      '#options' => array( 'query' => array( 'action_name' => $node->title)),
	  );

    $operations['delete'] = array( 
      '#type' => 'link',
      '#title' => t('delete'),
      '#href' => t( 'ocs_admin/campaign/@campaign/action/@action/delete',
		  array( '@campaign' => $item['campaign_id'],
			  '@action' => $item['action_id'])),
      '#options' => array( 'query' => array( 'action_name' => $node->title)),
	  );

    $actions[ $key]['operations'] = $operations;
  }
  $form['action']['#records'] = $actions;
  $form['action']['#caption'] = '<h3>Actions</h3>';
  $form['action']['#empty_text'] = t('There are no actions yet.');

  // add footer
  $form['action']['#footer'] = t('<ul class="action-links">'.
    '<li><a href="@rule">Add Action</a></li></ul>',
        array( '@rule' => url( 'ocs_admin/campaign/'. $campaign_id . '/rule/action'))
    );

   return $form;
}


/**
 * Recursive helper function for ocs_group_form().
 *
 * @param $tree
 *   The menu_tree retrieved by menu_tree_data.
 */
function _ocs_campaign_tree_form($tree) 
{
//	dpm( $tree, 'condition tree');

  $form = &drupal_static(__FUNCTION__, array('#tree' => TRUE));
  foreach ($tree as $data) {
    $title = '';
    $item = $data;
    if ($item ) {
      $mlid = 'mlid:' . $item['mlid'];
      $form[$mlid]['#item'] = $item;
      $form[$mlid]['#attributes'] = array( 'class' => array('menu-enabled'));
      $form[$mlid]['title']['#markup'] = $item['title'];
      $form[$mlid]['weight'] = array(
        '#type' => 'weight',
        '#delta' => 50,
//        '#default_value' => $item['weight'],
        '#default_value' => 50,
        '#title_display' => 'invisible',
        '#title' => t('Weight for @title', array('@title' => $item['title'])),
      );
       $form[$mlid]['mlid'] = array(
        '#type' => 'hidden',
        '#value' => $item['mlid'],
      );
      $form[$mlid]['plid'] = array(
        '#type' => 'hidden',
        '#default_value' => $item['plid'],
      );
      // Build a list of operations
      $operations = array();

	  if ( $item['title'] == 'OR' || $item['title'] == 'AND') {
		  $operations['edit'] = array(
			'#type' => 'markup',
			'#markup' => '',
		  );
		  $operations['delete'] = array(
			'#type' => 'link',
			'#title' => t('delete'),
			'#href' => t( 'ocs_admin/campaign/@campaign/rule/nojs/@cond/delete',
				array( '@campaign' => $data['db']['campaign_id'],
					'@cond' => $item['mlid'])),
			'#options' => array( 'html' => TRUE, 
				'attributes' => array( 'class' => array( 'use-ajax'))),
		  );
	  }
	  else {
		  $operations['edit'] = array( 
			'#type' => 'link',
			'#title' => t('edit'),
			'#href' => t( 'ocs_admin/campaign/@campaign/cond/@cond/edit',
				array( '@campaign' => $data['db']['campaign_id'],
					'@cond' => $item['mlid'])),
			'#options' => array( 'query' => array( 'name' => $item['title'])),
			);
		  $operations['delete'] = array( 
			'#type' => 'link',
			'#title' => t('delete'),
			'#href' => t( 'ocs_admin/campaign/@campaign/cond/@cond/delete',
				array( '@campaign' => $data['db']['campaign_id'],
					'@cond' => $item['mlid'])),
			'#options' => array( 'query' => array( 'name' => $item['title'])),
			);
	  }
      $form[$mlid]['operations'] = $operations;  
    }

    if ( isset($data['below'])) {
      _ocs_campaign_tree_form($data['below']);
    }
  }
  return $form;
}

function ocs_admin_campaign_rule_form_validate( $form, &$form_state)
{
	if ( $form_state['values']['op'] != 'Cancel') {
		dpm( $form_state['values'], 'form state');
		$child_count = array();
		foreach( element_children( $form) as $mlid) {
			if ( isset( $form[$mlid]['#item'])) {
				$element = $form[$mlid];
				$plid =  'mlid:' . $element['plid']['#value'];
				if ( $element['plid']['#value'] != 0) $child_count[$plid][] = $mlid;
				if ( ! isset($child_count[$mlid])) $child_count[$mlid] = array();
				dsm( $element['#item']['title'] . ': ' .$plid . '->' . $mlid . '  '. $element['plid']['#default_value']);
			}
		}

		dpm( $child_count, 'child count');
		foreach( $child_count as $mlid => $child) {
			$element = $form[$mlid]['#item'];
			if ( $element['title'] == 'AND' || $element['title'] == 'OR') {
				if ( count( $child) < 2) {
					form_set_error( $mlid, t( 'Invalid @op condition. More than 2 operands are required.', array( '@op' => $element['title'])));
				}
			}
			else {
				if ( count( $child) != 0) {
					form_set_error( $mlid, t( 'Invalid condition: "@op". No operands are allowed.', array( '@op' => $element['title'])));
				}
			}
		}
	}
}


function ocs_admin_campaign_rule_form_submit( $form, &$form_state)
{
	if ( $form_state['values']['op'] != 'Cancel') {
		dpm( $form_state, 'form_state submit');

		$order = array_flip( array_keys( $form_state['input']));
		dpm( $order, 'order');

		$form = array_merge( $order, $form);

		$updated_items = array();
		$fields = array( 'plid' => 'parent_id');

		foreach( element_children( $form) as $mlid) {
			if ( isset( $form[$mlid]['#item'])) {
				$element = $form[$mlid];
				// update any fields that have changed in this menu item.
				//dpm( $element['#item']['db'], 'element');
				foreach( $fields as $field => $db_field) {
					if ( $element[$field]['#value'] != $element[$field]['#default_value']) {
						$element['#item']['db'][$db_field] = $element[$field]['#value'];
						$updated_items[$mlid] = $element['#item'];
					}
				}
			}
		}

		dpm( $updated_items, 'updated');

		foreach( $updated_items as $item) {
			ocs_admin_campaign_condition_save( $item['db']);
		}

		drupal_set_message( t('Your configuration has been saved.'));
	}
}

/**
 * Returns HTML for the campaign overview  form into a table.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @ingroup themeable
 */
function theme_ocs_admin_campaign_overview( $variables) 
{
    $output = check_plain( $variables['title']);
    $output .= '<div class="description">' . filter_xss_admin($variables['description']). '</div>';

    return $output;
}


/**
 * Returns HTML for the campaign rules  form into a table.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @ingroup themeable
 */
function theme_ocs_admin_campaign_rule_form($variables) 
{
    $form = $variables['form'];
    $output = ocs_admin_campaign_rule_theme( $form);

	return $output;
}

function ocs_admin_campaign_rule_theme( $form)
{
    $header = array(
        t('Name'),
        t('Items'),
        t('Conditions & Actions'),
        array( 'data' => t('Operations'), 'colspan' => '3'),
    );

	$rows = array();
	//  dpm( $form, 'table form');
	  foreach ($form['event']['#records'] as $key => $item) {
		  $element = &$form['event']['#records'][$key];

		  $operations = array();
		  foreach( element_children( $element['operations']) as $op) {
			  $operations[] = array( 'data' => drupal_render($element['operations'][$op]),
				'class' => array('menu-operations'));
		  }

		  // add event row
		  // Add special classes to be used for tabledrag.js.
		  $element['weight']['#attributes']['class'] = array('menu-weight');

		  $event = array();
		  $event[] = array( 'data' => $element['description'], 'colspan' => '3', 'class' => array('description'));

//		  $event[] = drupal_render($element['weight']);
		  $event = array_merge( $event, $operations);

		  $event = array_merge(array('data' => $event), $element['#attributes']);
		  $event['class'][] = 'draggable';
		  $rows[] = $event;

		  // list conditions and actions
		  $rule_idx = 1;
		  foreach ( $element['#rule'] as $rule) {
			  $i=0;
			  $no_cond = max( 1, count( $rule['cond']));
			  $no_action = max( 1, count( $rule['action']));

			  $t_arg = array( '@campaign' => $rule['campaign_id'], '@rule' => $rule['rule_id']);
			  $q_arg = array();
			  $delete_rule = array( 
				  '#type' => 'link',
				  '#title' => t('Delete'),
				  '#href' => t( 'ocs_admin/campaign/@campaign/rule/@rule/nojs/delete', $t_arg),
				  '#options' => array( 'html' => TRUE, 'attributes' => array( 'class' => array( 'use-ajax'))),
				  '#prefix' => '<div>',
				  '#suffix' => '</div>',
			  );

			  $rule_section = array( 'data' => t( 'Rule @id ', array( '@id' => $rule_idx++)) . 
					  drupal_render( $delete_rule),
							  'rowspan' => $no_cond + $no_action);

			  foreach( $rule['cond'] as $cond) {
				  $row = array();
				  if ( $i++ == 0) {
					  $row[] = $rule_section;
					  $row[] = array( 'data' => 'Conditions', 'rowspan' => $no_cond);
				  }
				  $row[] = array( 'data' => 'Condition');
				  $rows[] = $row;
			  }

			  if ( empty( $rule['cond'])) {
				$rows[] = array( $rule_section,
						array('data' => 'Conditions'),
						array('data' => t('There are no conditions yet. <a href="@url">Add Conditions</a>.',
				array( '@url' => url( t( 'ocs_admin/campaign/@campaign/rule/@rule/cond/add', $t_arg), $q_arg)))));
			  }

			  $i=0;
			  foreach( $rule['action'] as $action) {
				  $row = array();
				  if ( $i++ == 0) {
					  $row[] = array( 'data' => 'Actions', 'rowspan' => $no_action);
				  }
				  $row[] = array( 'data' => 'Action');
				  $rows[] = $row;
			  }

			  if ( empty( $rule['action'])) {
				$rows[] = array( 
						array('data' => 'Actions'),
						array('data' => t('There are no actions yet. <a href="@url">Add Actions</a>.',
				array( '@url' => url( t( 'ocs_admin/campaign/@campaign/rule/@rule/action/add', $t_arg), $q_arg)))));
			  }
		  }

		  if ( empty( $element['#rule'])) {
		  	$rows[] = array( array('data' => 'Rule'),
					array('data' => $form['event']['#no_rule'] . $element['operations']['rule']['#markup'], 
						'colspan' => '2'));
		  }
	  }

	  if (empty($rows)) {
		$rows[] = array(array('data' => $form['#empty_text'], 'colspan' => '7'));
	  }
	  $footer = ( isset($form['#footer'])) ?  array(array('data' => $form['#footer'], 'colspan' => '7')) : NULL;

	  $output = '<br>';
	  if ( isset( $form['#caption'])) {
		  $output .= '<h3>' . $form['#caption'] . '</h3>';
	  }
	  $output .= '<div id="ocs_admin_campaign_rule_div">' ;
	  $output .= theme('table', array('header' => $header, 'footer' => $footer, 'rows' => $rows, 'attributes' => array('id' => 'menu-overview')));
	  $output .= '</div>';

	  return $output;
}

/*
** Add/Edit campaign rules
*/
function ocs_admin_campaign_rule_edit_form( $form, &$form_state, $type, $campaign_id)
{
    if ( $type == 'edit') {
        // load campaign data
        $campaign = NULL;
    }

    $form['campaign_id'] = array(
        '#type' => 'hidden',
        '#value' => $campaign_id,
    );

    $form['cond_id'] = array(
        '#type' => 'hidden',
        '#value' => isset( $campaign) ? $campaign['cond_id'] : 0,
    );

    $form['parent_id'] = array(
        '#type' => 'hidden',
        '#value' => isset( $campaign) ? $campaign['parent_id'] : 0,
    );

    $form['cond_name'] = array(
        '#type' => 'textfield',
        '#title' => 'Rule Name',
        '#description' => t('Enter Rule Name'),
        '#default_value' => isset( $campaign) ? $campaign['cond_name'] : NULL,
    );

    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );

    return $form;
}

function ocs_admin_campaign_rule_edit_form_submit( $form, &$form_state)
{
    $campaign = $form_state['values'];
    dpm( $campaign, 'submit campaign');
    ocs_admin_campaign_rule_save($campaign);

    drupal_set_message( t('Your configuration has been saved.'));

    $form_state['redirect'] = 'ocs_admin/campaign/' . $campaign['campaign_id'];
}


/*
** Add/Edit campaign properties
*/
function ocs_admin_campaign_edit_form( $form, &$form_state, $op, $campaign_id = NULL)
{
	$campaign = ocs_admin_campaign_load( $campaign_id);

    $form['campaign_id'] = array(
        '#type' => 'hidden',
        '#value' => $campaign_id,
    );

    $form['campaign_name'] = array(
        '#type' => 'textfield',
        '#title' => 'Name',
        '#default_value' => $campaign['campaign_name'],
    );

    $form['description'] = array(
        '#type' => 'textfield',
        '#title' => 'Description',
        '#default_value' => $campaign['description'],
    );

    $form['status'] = array(
        '#type' => 'select',
        '#title' => 'Status',
        '#options' => array(
			'0' => 'Disabled',
			'1' => 'Enabled',
			),
        '#default_value' => $campaign['status'],
    );

	$date_str = isset($campaign['start_date']) ? $campaign['start_date'] : date( 'Y-m-d', time());
	dpm( $date_str, 'date str');
	$form['start_date'] = array(
		'#type' => 'date',
		'#title' => 'Start Date',
		'#default_value' => date_parse( $date_str),
	);

	$date_str = isset($campaign['end_date']) ? $campaign['end_date'] : date( 'Y-m-d', time());
	$form['end_date'] = array(
		'#type' => 'date',
		'#title' => 'End Date',
		'#default_value' => date_parse( $date_str),
	);

    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );

    $form['actions']['cancel'] = array(
        '#type' => 'submit',
        '#value' => t('Cancel'),
    );

    return $form;
}


function ocs_admin_campaign_edit_form_validate( $form, &$form_state)
{
	if ( $form_state['values']['op'] != 'Cancel') {
		// check start & end date
	}
}


function ocs_admin_campaign_edit_form_submit( $form, &$form_state)
{
    $values = $form_state['values'];
	if ( $values['op'] != 'Cancel') {
		$values['start_date'] = sprintf( '%04d-%02d-%02d', $values['start_date']['year'] , 
				$values['start_date']['month'] , $values['start_date']['day']);
		$values['end_date'] = sprintf( '%04d-%02d-%02d', $values['end_date']['year'] , 
				$values['end_date']['month'] , $values['end_date']['day']);

		ocs_admin_campaign_save($values);

		drupal_set_message( t('Your configuration has been saved.'));

		$form_state['redirect'] = 'ocs_admin/campaign/' . $values['campaign_id'];

	}
}


function ocs_admin_campaign_load( $campaign_id)
{
    db_set_active('ocsdb');

    // get group information
    $query = db_select( 'ocs_campaign', 'c');
    $result = $query->condition( 'c.campaign_id', $campaign_id, '=')
        ->fields( 'c')
        ->execute()
        ->fetchAssoc( 'event_id', PDO::FETCH_ASSOC);
    
    db_set_active( 'default');

    return $result;
}

function ocs_admin_campaign_save( $campaign)
{
    db_set_active('ocsdb');

	$data = array();
	foreach( array( 'campaign_name', 'description', 'status', 'start_date', 'end_date') as $key) {
		$data[ $key] = $campaign[ $key];
	}

	$result = db_merge( 'ocs_campaign')
		->key( array( 'campaign_id' => $campaign['campaign_id']))
		->fields( $data)
		->execute();

    db_set_active( 'default');

    return $result;
}


/*
** delete campaign
*/
function ocs_admin_campaign_delete_form( $form, &$form_state, $campaign_id)
{
	$campaign = ocs_admin_campaign_load( $campaign_id);

    $form['#campaign'] = $campaign;

    $caption = '<p>'. t('This action cannot be undone...') . '</p>';

    return confirm_form( $form, t('Are you sure to delete the campaign "@name"?', 
				array( '@name' => $campaign['campaign_name'])),
			'ocs_admin/campaign/list', $caption, t('Delete'));
}

function ocs_admin_campaign_delete_form_submit( $form, &$form_state)
{
    $campaign = $form['#campaign'];

	ocs_admin_campaign_delete( $campaign['campaign_id']);

    $t_args = array( '%name' => $campaign['campaign_name']);
    drupal_set_message( t('The campaign %name has been deleted.', $t_args));
    watchdog( 'ocs_admin', 'Deleted campaign %name.', $t_args, WATCHDOG_NOTICE);

	$form_state['redirect'] = 'ocs_admin/campaign/list';
}

function ocs_admin_campaign_delete( $campaign_id)
{
    db_set_active( 'ocsdb');

    // delete the group and all subgroups
    $status = db_delete( 'ocs_campaign')
        ->condition( 'campaign_id', $campaign_id)
        ->execute();
    dpm( $status, 'db_delete result');

    db_set_active( 'default');
}




/* 
   load all events that belongs to a given event of the campaign
   */
function ocs_admin_campaign_event_rule_load( $campaign_id, $event_id)
{
    db_set_active('ocsdb');

    // get group information
    $query = db_select( 'ocs_campaign_rule', 'c');
    $result = $query->condition( 'c.campaign_id', $campaign_id, '=')
    	->condition( 'c.event_id', $event_id, '=')
        ->fields( 'c')
        ->execute()
        ->fetchAllAssoc( 'rule_id', PDO::FETCH_ASSOC);
    
	// get conditions
	foreach( $result as $key => $record) {
		$rule = &$result[$key];
		$rule['cond'] = array();
		$rule['action'] = array();
	}

    db_set_active( 'default');

	return $result;
}

