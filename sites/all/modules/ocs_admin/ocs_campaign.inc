<?php

/*
** campaign list
*/
function ocs_admin_campaign_overview() 
{
    $result = array(
        array( 'title' => 'First call campaign',
            'description' => 'Give bonus when a user makes a first call',
            'campaign_name' => 'first_call_1',
            'campaign_id' => '1',
            ),
        array( 'title' => 'Recharge bonus campaign',
            'description' => 'Give 100 SMS for 3 consequent recharges',
            'campaign_name' => 'rechrage_1',
            'campaign_id' => '2',
            ),
    );

    $header = array( t('Campaign'), array('data' => t('Operations'), 'colspan' => '3'));
    $rows = array();
    foreach( $result as $item) {
        $row = array( theme( 'ocs_admin_group_overview', 
            array( 'title' => $item['title'],
                'name' => $item['campaign_name'],
                'description' => $item['description'])));
        $row[] = array( 'data' => l(t('edit'), 'ocs_admin/campaign/'. $item['campaign_id'] . '/edit'), 
            'class' => 'operation-list');
        $row[] = array( 'data' => l(t('rules'), 'ocs_admin/campaign/'. $item['campaign_id'] . '/rule'), 
            'class' => 'operation-list');
        $row[] = array( 'data' => l(t('disable'), 'ocs_admin/campaign/'. $item['campaign_id'] . '/disable'), 
            'class' => 'operation-list');
        $rows[] = $row;
    }

    return array(
        'active' => array(
            '#markup' => '<h3>Active Campaigns</h3>'.
                theme( 'table', array( 'header' => $header, 'rows' => $rows)),
            ),
         'inactive' => array(
            '#markup' => '<br><h3>Inactive Campaigns</h3>'.
                theme( 'table', array( 'header' => $header, 'rows' => $rows)),
            ),
    );
}

function ocs_admin_campaign_rule_page( $campaign_id)
{ 
    $form = drupal_get_form( 'ocs_admin_campaign_rule_form', $campaign_id);
    $page = array(
         'rule' => array(
            '#markup' => drupal_render( $form),
            ),
    );

    return $page;
}

/*
** campaign rules form
*/
function ocs_admin_campaign_rule_form( $form, &$form_state, $campaign_id = NULL)
{
  $form['#attached']['css'] = array(drupal_get_path('module', 'ocs_admin') . '/ocs_admin.css');

  // get all events
  $event = ocs_admin_db_get_campaign_events( $campaign_id);

  foreach( $event as $key => $item) {
    $records = array();
    $node = node_load( $item['event_id']);
    $client = taxonomy_term_load( $node->field_ocs_client_id['und'][0]['tid']);

    $info = array(
        'title' => $node->title,
        'name' => $client->name,
        'description' => t( '<em>%event</em> event generated by the system <em>%client</em>',
            array( '%event' => $node->title, '%client' => $client->name)),
        '#attributes' => array( 'class' => array('menu-enabled')),
        'weight' => array(
            '#type' => 'weight',
            '#delta' => 50,
//        '#default_value' => $item['weight'],
            '#default_value' => 50,
            '#title_display' => 'invisible',
            '#title' => t('Weight for @title', array('@title' => $node->title)),
      ),
  );

    $event[ $key] = array_merge( $event[$key], $info);

    // Build a list of operations
    $operations = array();
    $operations['delete'] = array( 
      '#type' => 'link',
      '#title' => t('delete'),
      '#href' => 'ocs_admin/campaign/'. $item['campaign_id'] . '/event/'. $item['event_id'] . '/delete');

    $event[ $key]['operations'] = $operations;
  }
  $form['event']['#records'] = $event;
  $form['event']['#caption'] = '<h3>Events</h3>';
  $form['event']['#empty_text'] = t('There are no events yet.');

  // add footer
  $form['event']['#footer'] = t('<ul class="action-links">'.
    '<li><a href="@rule">Add Event</a></li>'. '</ul>',
        array( '@rule' => url( 'ocs_admin/campaign/'. $campaign_id . '/rule/event'))
    );


  // get all conditions
  $cond = ocs_admin_db_get_campaign_conditions( $campaign_id);
//  dpm( $cond, 'cond');

  $tree = ocs_admin_build_tree( $cond, array(
    'title' => 'cond_name',
    'plid' => 'parent_id',
    'mlid' => 'my_id',
  ));

  $form['condition'] = _ocs_campaign_tree_form($tree);
  $form['condition']['#caption'] = 'Conditions';

  if ( ! element_children($form['condition'])) {
    $form['condition']['#empty_text'] = t('There are no campaign rules yet. <a href="@link">Add Rules</a>.', 
        array('@link' => url('ocs_admin/campaign/'. $campaign_id .'/add')));
  }

  // add footer
  $form['condition']['#footer'] = t('<ul class="action-links">'.
    '<li><a href="@rule">Add Condition</a></li>'.
    '<li><a href="@and">Add AND</a></li>'.
    '<li><a href="@or">Add OR</a></li>'.'</ul>',
        array( '@rule' => url( 'ocs_admin/campaign/'. $campaign_id . '/add'),
            '@and' => url( 'ocs_admin/campaign/'. $campaign_id . '/add/and'),
            '@or' => url( 'ocs_admin/campaign/'. $campaign_id . '/add/or'))
    );


  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configuration'),
    );

   return $form;
}


function ocs_admin_campaign_event_form( $form, &$form_state, $campaign_id)
{
    $items = entity_load('node', FALSE, array('type' => 'ocs_events'));
    $options = array();
    foreach( $items as $item) {
        $client = taxonomy_term_load( $item->field_ocs_client_id['und'][0]['tid']);
        dpm( $client, 'client');
        $options[$client->name][$item->nid] = $item->title;
    }

    $form['body'] = array(
        '#type' => 'markup',
        '#markup' => t( 'Select the event to add.'),
    );

    $form['campaign_id'] = array(
        '#type' => 'hidden',
        '#value' => $campaign_id,
    );

    $form['event_id'] = array(
        '#type' => 'select',
        '#title' => t('React on event'),
        '#options' => $options,
        '#description' => t('Whenever the event occurs, rule evaluation is trigged'),
    );

    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save configuration'),
    );

    return $form;
}

function ocs_admin_campaign_event_form_submit( $form, &$form_state)
{
    dpm( $form_state['values'], 'form_state');
    $event = $form_state['values'];

    ocs_admin_campaign_event_save( $event);

    $form_state['redirect'] = 'ocs_admin/campaign/' . $event['campaign_id'] .'/rule';
}

/*
    get condition list
*/
function ocs_admin_db_get_campaign_events( $campaign_id)
{
    db_set_active('ocsdb');

    // get group information
    $query = db_select( 'ocs_campaign_events', 'c');
    $result = $query->condition( 'c.campaign_id', $campaign_id, '=')
        ->fields( 'c')
        ->execute()
        ->fetchAllAssoc( 'event_id', PDO::FETCH_ASSOC);
    

    db_set_active( 'default');

    return $result;
}

/*
    get condition list
*/
function ocs_admin_db_get_campaign_conditions( $campaign_id)
{
    db_set_active('ocsdb');

    // get group information
    $query = db_select( 'ocs_campaign_conditions', 'c');
    $result = $query->condition( 'c.campaign_id', $campaign_id, '=')
        ->fields( 'c')
        ->execute()
        ->fetchAllAssoc( 'my_id', PDO::FETCH_ASSOC);

//    dpm( $result, 'result');

    db_set_active( 'default');

    return $result;
}

/**
 * Recursive helper function for ocs_group_form().
 *
 * @param $tree
 *   The menu_tree retrieved by menu_tree_data.
 */
function _ocs_campaign_tree_form($tree) {
  $form = &drupal_static(__FUNCTION__, array('#tree' => TRUE));
  foreach ($tree as $data) {
    $title = '';
    $item = $data;
    if ($item ) {
      $mlid = 'mlid:' . $item['mlid'];
      $form[$mlid]['#item'] = $item;
      $form[$mlid]['#attributes'] = array( 'class' => array('menu-enabled'));
      $form[$mlid]['title']['#markup'] = $item['title'];
      $form[$mlid]['weight'] = array(
        '#type' => 'weight',
        '#delta' => 50,
//        '#default_value' => $item['weight'],
        '#default_value' => 50,
        '#title_display' => 'invisible',
        '#title' => t('Weight for @title', array('@title' => $item['title'])),
      );
       $form[$mlid]['mlid'] = array(
        '#type' => 'hidden',
        '#value' => $item['mlid'],
      );
      $form[$mlid]['plid'] = array(
        '#type' => 'hidden',
        '#default_value' => $item['plid'],
      );
      // Build a list of operations
      $operations = array();
      $operations['edit'] = array( 
        '#type' => 'link',
        '#title' => t('edit'),
        '#href' => 'ocs_admin/campaign/'. $item['mlid'] . '/edit');
      $operations['delete'] = array( 
        '#type' => 'link',
        '#title' => t('delete'),
        '#href' => 'ocs_admin/campaign/'. $item['mlid'] . '/delete');
      $form[$mlid]['operations'] = $operations;  
    }

    if ( isset($data['below'])) {
      _ocs_campaign_tree_form($data['below']);
    }
  }
  return $form;
}

function ocs_admin_campaign_rule_form_submit( $form, &$form_state)
{
//    dpm( $form_state, 'form_state');

    $order = array_flip( array_keys( $form_state['input']));
    $form = array_merge( $order, $form);

//    dpm( $order, 'order');
 //   dpm( $form, 'form');

    $updated_items = array();
    $fields = array( 'plid' => 'parent_group_id');

    foreach( element_children( $form) as $mlid) {
        if ( isset( $form[$mlid]['#item'])) {
            $element = $form[$mlid];
            // update any fields that have changed in this menu item.
            foreach( $fields as $field => $db_field) {
                if ( $element[$field]['#value'] != $element[$field]['#default_value']) {
                    $element['#item']['db'][$db_field] = $element[$field]['#value'];
                    $updated_items[$mlid] = $element['#item'];
//                    dpm( $updated_items[$mlid], 'updated');
                }
            }
            // hidden is a special case, the value needs to be reserved
            /*
            if ( $element['hidden']['#value'] != $element['hidden']['#default_value']) {
                // convert to integer rather than boolean due to PDO cast to string
                $element['#item']['hidden'] = $element['hidden']['#value'] ? 0 : 1;
                $updated_items[$mlid] = $element['#item'];
                dpm( $updated_items[$mlid], 'updated hidden');
            }
            */
        }
    }

    foreach( $updated_items as $item) {
        ocs_admin_group_save( $item['db']);
    }

    drupal_set_message( t('Your configuration has been saved.'));
}

/**
 * Returns HTML for the campaign overview  form into a table.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @ingroup themeable
 */
function theme_ocs_admin_campaign_overview( $variables) 
{
    $output = check_plain( $variables['title']);
    $output .= '<div class="description">' . filter_xss_admin($variables['description']). '</div>';

    return $output;
}


/**
 * Returns HTML for the campaign rules  form into a table.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @ingroup themeable
 */
function theme_ocs_admin_campaign_rule_form($variables) 
{
    $form = $variables['form'];
    $header = array(
        t('Name'),
        t('Weight'),
        array( 'data' => t('Operations'), 'colspan' => '3'),
    );

    // event table
    $output = ocs_admin_table_theme( $form['event'], $header);
    $output .= ocs_admin_tree_table_theme( $form['condition'], $header);

    return $output;
}

/*
** Add/Edit campaign rules
*/
function ocs_admin_campaign_rule_edit_form( $form, &$form_state, $type, $campaign_id)
{
    if ( $type == 'edit') {
        // load campaign data
        $campaign = NULL;
    }

    $form['campaign_id'] = array(
        '#type' => 'hidden',
        '#value' => $campaign_id,
    );

    $form['my_id'] = array(
        '#type' => 'hidden',
        '#value' => isset( $campaign) ? $campaign['my_id'] : 0,
    );

    $form['parent_id'] = array(
        '#type' => 'hidden',
        '#value' => isset( $campaign) ? $campaign['parent_id'] : 0,
    );

    $form['cond_name'] = array(
        '#type' => 'textfield',
        '#title' => 'Rule Name',
        '#description' => t('Enter Rule Name'),
        '#default_value' => isset( $campaign) ? $campaign['cond_name'] : NULL,
    );

    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );

    return $form;
}

function ocs_admin_campaign_rule_edit_form_submit( $form, &$form_state)
{
    $campaign = $form_state['values'];
    dpm( $campaign, 'submit campaign');
    ocs_admin_campaign_rule_save($campaign);

    drupal_set_message( t('Your configuration has been saved.'));

    $form_state['redirect'] = 'ocs_admin/campaign/' . $campaign['campaign_id'];
}


